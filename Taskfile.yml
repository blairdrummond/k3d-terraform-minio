version: "3"

silent: true

vars:
  CLUSTER_NAME: minio-cluster
  APP_NAME: k3d-terraform-minio
  HELM_VERS: v3.8.0
  METALLB_VERSION: v0.12.1

  KUBECTL: kubectl --context k3d-{{.CLUSTER_NAME}}

  # Nginx with LoadBalancer
  METALLB_EXAMPLE_SERVICE: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx-deployment
    spec:
      selector:
        matchLabels:
          app: nginx
      replicas: 2 # tells deployment to run 2 pods matching the template
      template:
        metadata:
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx:1.14.2
              ports:
                - containerPort: 80
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: my-service
    spec:
      type: LoadBalancer
      selector:
        app: nginx
      ports:
        - protocol: TCP
          port: 80
          targetPort: 80

tasks:
  deploy:
    prefix: deploy
    desc: |
      Create a k3d cluster
      Install metallb
      Install keycloak
      Configure Keycloak with terraform
      Install & Configure MinIO Gateway with Terraform
    cmds:
      - task: k3d:create
      - task: metallb:install
      - task: keycloak:install

  k3d:create:
    prefix: k3d > create
    desc: create a k3d cluster, using the name {{.CLUSTER_NAME}}
    cmds:
      - k3d cluster create {{.CLUSTER_NAME}} --kubeconfig-switch-context
      - k3d kubeconfig get {{.CLUSTER_NAME}} > kubeconfig.yaml
    generates:
      - kubeconfig.yaml

  k3d:destroy:
    prefix: k3d < destroy
    desc: destroy the k3d cluster with name {{.CLUSTER_NAME}}
    cmds:
      - k3d cluster delete {{.CLUSTER_NAME}}
      - rm -f kubeconfig.yaml .terraform.lock.hcl terraform.tfstate terraform.tfstate.backup
      - rm -rf .terraform

  k3d:start:
    prefix: k3d > start
    desc: start the k3d cluster, using the name {{.CLUSTER_NAME}}
    cmds:
      - "k3d cluster start {{.CLUSTER_NAME}}"

  k3d:stop:
    prefix: k3d > stop
    desc: start the k3d cluster, with the name {{.CLUSTER_NAME}}
    cmds:
      - "k3d cluster stop {{.CLUSTER_NAME}}"

  metallb:install:
    desc: create the metallb config
    cmds:
      - |
        {{.KUBECTL}} apply \
          -f https://raw.githubusercontent.com/metallb/metallb/{{.METALLB_VERSION}}/manifests/namespace.yaml
      - |
        {{.KUBECTL}} apply \
          -f https://raw.githubusercontent.com/metallb/metallb/{{.METALLB_VERSION}}/manifests/metallb.yaml
      - |
        {{.KUBECTL}} create \
          secret generic -n metallb-system memberlist \
          --from-literal=secretkey="$(openssl rand -base64 128)"
      - |
        {{.KUBECTL}} create cm -n metallb-system config \
          --from-literal=config="{{.CONTENT}}"
    vars:
      IP_RANGE:
        sh: |
          docker network inspect -f '{{ "{{" }}.IPAM.Config {{ "}}" }}' k3d-minio-cluster |
            tr -d '[]{}a-z' | 
            awk '{print $1}' |
            awk -F '.' '{printf("%d.%d", $1, $2)}'
      CONTENT: |
        address-pools:
        - name: default
          protocol: layer2
          addresses:
          - {{.IP_RANGE}}.255.200-{{.IP_RANGE}}.255.250

  metallb:example:create:
    desc: create example metallb service
    cmds:
    - |
      cat <<EOF | kubectl apply -f - 
      {{.METALLB_EXAMPLE_SERVICE}}
      EOF
  
  metallb:example:delete:
    desc: delete example metallb service
    cmds:
    - |
      cat <<EOF | kubectl delete -f - 
      {{.METALLB_EXAMPLE_SERVICE}}
      EOF


  helm:setup:
    desc: configure repos
    cmds:
      - cmd: helm repo add bitnami https://charts.bitnami.com/bitnami/
        ignore_error: true

  keycloak:install:
    desc: install keycloak helm chart
    deps: [helm:setup]
    cmds:
      - cmd: kubectl --context k3d-{{.CLUSTER_NAME}} create ns keycloak
        ignore_error: true
      - |
        helm install --kube-context k3d-{{.CLUSTER_NAME}} \
          --namespace keycloak \
          keycloak bitnami/keycloak

  keycloak:uninstall:
    desc: uninstall keycloak helm chart
    cmds:
      - cmd: kubectl --context k3d-{{.CLUSTER_NAME}} delete ns keycloak

  # Terraform
  terraform:init:
    desc: terraform init
    cmds:
      - terraform init
    dir: ./terraform/

  terraform:plan:
    desc: terraform plan
    deps:
      - task: terraform:init
    cmds:
      - terraform plan
    dir: ./terraform/

  terraform:apply:
    desc: terraform apply
    deps:
      - task: terraform:init
    cmds:
      - terraform apply
    dir: ./terraform/
